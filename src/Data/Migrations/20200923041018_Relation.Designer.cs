// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200923041018_Relation")]
    partial class Relation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Business.Models.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnName("Uf")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Desenvolvedor");
                });

            modelBuilder.Entity("Business.Models.LaunchTime", b =>
                {
                    b.Property<Guid>("IdDeveloper")
                        .HasColumnName("IdDesenvolvedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProject");

                    b.Property<DateTime>("End")
                        .HasColumnName("DataHoraFinal")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("Id");

                    b.Property<DateTime>("Initial")
                        .HasColumnName("DataHoraInicio")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("DataRegistro")
                        .HasColumnType("DateTime");

                    b.HasKey("IdDeveloper", "IdProject");

                    b.HasIndex("IdProject");

                    b.ToTable("LancamentoHora");
                });

            modelBuilder.Entity("Business.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Concluded")
                        .HasColumnName("Concluido")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("DataFinal")
                        .HasColumnType("DateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("DataInicio")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("Business.Models.LaunchTime", b =>
                {
                    b.HasOne("Business.Models.Developer", "Developer")
                        .WithMany("LaunchTimes")
                        .HasForeignKey("IdDeveloper")
                        .HasConstraintName("FK_IdDesenvolvedor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Business.Models.Project", "Project")
                        .WithMany("LaunchTimes")
                        .HasForeignKey("IdProject")
                        .HasConstraintName("FK_IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
